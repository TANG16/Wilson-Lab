% read an image generated by ImageScan
% (Warren Lab, Duke University)
%
% for now, just load it and then display
% if output argument, then don't display, but pass out the channels in a
% cell array
%
% CHANGELOG:
% 5/25/2011 -- Drop last column if data file has one more than specified in
%              nColsPerChan

function X = readImage( fileName, nRowsPerChan, nColsPerChan )
    
    dat = dlmread(fileName,'\t');
    % thought about using textscan, but it isn't much faster.
    
    % drop precision to speed up processing (since the ASCII formats 
    % don't have double precision anyway)
    dat = single(dat);
    
    
    % get the no. of columns and rows in the data file
    [nRows,nCols] = size(dat);

    % A single data file contains multiple channels all
    % vertically concatenated together. We need to separate
    % this into data from each channel.
    
    % determine how many rows per channel
    if( nargin == 1 )
        % assume image is square if n rows and ncols not specified
        [nRowsPerChan,nColsPerChan] = size(dat);
    elseif( nargin ~= 3 )
        % if we don't have 3 arguments to specify filename and
        % no. rows and on. cols, then complain
        error('Incorrect number of arguments passed to readImage.');
    end
    
    % double check nCols is correct
    if nColsPerChan == (nCols - 1)
        warning('no. colums in image exceeds no. columns specified in header');
        % get rid of last column
        dat = dat(:,1:(end-1));
    elseif nColsPerChan ~= nCols
        error(['Number of columns specified (',num2str(nColsPerChan),...
            ') does not match number of columns in data file (',...
            num2str(nCols),') for file: ', fileName]);
        
    end
    
    nChan = nRows / nRowsPerChan;
    
    % double check that we have an _integer_ no. of channels
    if( round(nChan) ~= nChan )
        error('Incorrect number of rows per channel specified.');
    end    
    
    for iChan = 1:nChan
        
        chnMinRow = (iChan-1)*nRowsPerChan + 1;
        chnMaxRow = (iChan-1)*nRowsPerChan + nRowsPerChan;
        chan = dat((chnMinRow:chnMaxRow),:);
        
        if nargout == 0
            figure();
            imagesc(chan);
            set(gca,'ydir','normal');
            title([fileName,': Channel ',num2str(iChan)],'interp','none');
        else
            X{iChan} = chan;
        end
    end
        
end